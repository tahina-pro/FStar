################################################################################
# Customize these variables for your project
################################################################################
# The root files of your project, from which to begin scanning dependences
FSTAR_FILES = \
	LowParse.Slice.fst \
	LowParse.Base.fst \
	LowParse.Int.fst \
	LowParse.VLBytes.fst \
	LowParse.List.fst \
	LowParse.Enum.fst \
	LowParse.Sum.fst \
	LowParse.fst \
	LowParse.Examples.fst \


EXTRACT_FILES := LowParse.Examples.fst

# The paths to related files which to include for scanning
#   -- No need to add FSTAR_HOME/ulib; it is included by default
INCLUDE_PATHS =

# The executable file you want to produce
PROGRAM = lowparse_examples

# A driver in ML to call into your program
TOP_LEVEL_FILE ?=

# A place to put all the emitted .ml files
OUTPUT_DIRECTORY ?= _output

FSTAR_OPTIONS ?= --z3rlimit_factor 4

################################################################################

ifeq ($(KREMLIN_HOME),)
  INCLUDE_KREMLIN=
else
  INCLUDE_KREMLIN=--include $(KREMLIN_HOME)/kremlib
endif

MY_FSTAR=$(FSTAR_HOME)/bin/fstar.exe --use_hints --cache_checked_modules --odir $(OUTPUT_DIRECTORY) $(addprefix --include , $(INCLUDE_PATHS)) $(INCLUDE_KREMLIN)  $(FSTAR_OPTIONS)
MY_KREMLIN=$(KREMLIN_HOME)/krml

all: verify-all

# a.fst.checked is the binary, checked version of a.fst
%.checked: %
	$(MY_FSTAR) $*
	touch $@

$(FSTAR_HOME)/bin/fstarlib/fstarlib.cmxa:
	make -C $(FSTAR_HOME)/ulib/ml

basic_clean:
	rm -rf _build $(OUTPUT_DIRECTORY) *~ *.checked $(OCAML_EXE) $(KREMLIN_EXE) .depend

.depend:
	$(MY_FSTAR) --dep full $(FSTAR_FILES) > .depend

depend: .depend

include .depend

# The default target is to verify all files, without extracting anything
# It needs to be here, because it reads the variable ALL_FST_FILES in .depend
verify-all: $(addsuffix .checked, $(ALL_FST_FILES))

extract-ocaml: $(EXTRACT_FILES:.fst=.fst.checked)
	$(MY_FSTAR) $(EXTRACT_FILES) --codegen OCaml

extract-c: $(EXTRACT_FILES:.fst=.fst.checked)
	$(MY_KREMLIN) $(addprefix -I ,$(INCLUDE_PATHS)) -skip-compilation -warn-error +11 $(EXTRACT_FILES)
